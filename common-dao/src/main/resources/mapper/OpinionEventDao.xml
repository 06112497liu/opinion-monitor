<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.dao.OpinionEventDao">
  <resultMap id="BaseResultMap" type="com.bbd.domain.OpinionEvent">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="event_name" jdbcType="VARCHAR" property="eventName" />
    <result column="event_group" jdbcType="VARCHAR" property="eventGroup" />
    <result column="monitor" jdbcType="TINYINT" property="monitor" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="event_level" jdbcType="TINYINT" property="eventLevel" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="merchant" jdbcType="VARCHAR" property="merchant" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="merchant_tel" jdbcType="VARCHAR" property="merchantTel" />
    <result column="consumer" jdbcType="VARCHAR" property="consumer" />
    <result column="consumer_tel" jdbcType="VARCHAR" property="consumerTel" />
    <result column="include_words" jdbcType="VARCHAR" property="includeWords" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="exclude_words" jdbcType="VARCHAR" property="excludeWords" />
    <result column="words" jdbcType="VARCHAR" property="words" />
    <result column="opinion_count" jdbcType="INTEGER" property="opinionCount" />
    <result column="warn_count" jdbcType="INTEGER" property="warnCount" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="modified_by" jdbcType="BIGINT" property="modifiedBy" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, event_name, event_group, monitor, region, event_level, description, merchant, 
    brand, address, merchant_tel, consumer, consumer_tel, include_words, keywords, exclude_words, 
    words, opinion_count, warn_count, create_by, gmt_create, modified_by, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.bbd.domain.OpinionEventExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_opinion_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bbd_opinion_event
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bbd_opinion_event
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bbd.domain.OpinionEvent">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_opinion_event (event_name, event_group, monitor, 
      region, event_level, description, 
      merchant, brand, address, 
      merchant_tel, consumer, consumer_tel, 
      include_words, keywords, exclude_words, 
      words, opinion_count, warn_count, 
      create_by, gmt_create, modified_by, 
      gmt_modified)
    values (#{eventName,jdbcType=VARCHAR}, #{eventGroup,jdbcType=VARCHAR}, #{monitor,jdbcType=TINYINT}, 
      #{region,jdbcType=VARCHAR}, #{eventLevel,jdbcType=TINYINT}, #{description,jdbcType=VARCHAR}, 
      #{merchant,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{merchantTel,jdbcType=VARCHAR}, #{consumer,jdbcType=VARCHAR}, #{consumerTel,jdbcType=VARCHAR}, 
      #{includeWords,jdbcType=VARCHAR}, #{keywords,jdbcType=VARCHAR}, #{excludeWords,jdbcType=VARCHAR}, 
      #{words,jdbcType=VARCHAR}, #{opinionCount,jdbcType=INTEGER}, #{warnCount,jdbcType=INTEGER}, 
      #{createBy,jdbcType=BIGINT}, NOW(), #{modifiedBy,jdbcType=BIGINT}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bbd.domain.OpinionEvent">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_opinion_event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eventName != null">
        event_name,
      </if>
      <if test="eventGroup != null">
        event_group,
      </if>
      <if test="monitor != null">
        monitor,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="eventLevel != null">
        event_level,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="merchant != null">
        merchant,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="merchantTel != null">
        merchant_tel,
      </if>
      <if test="consumer != null">
        consumer,
      </if>
      <if test="consumerTel != null">
        consumer_tel,
      </if>
      <if test="includeWords != null">
        include_words,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
      <if test="excludeWords != null">
        exclude_words,
      </if>
      <if test="words != null">
        words,
      </if>
      <if test="opinionCount != null">
        opinion_count,
      </if>
      <if test="warnCount != null">
        warn_count,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="modifiedBy != null">
        modified_by,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="eventGroup != null">
        #{eventGroup,jdbcType=VARCHAR},
      </if>
      <if test="monitor != null">
        #{monitor,jdbcType=TINYINT},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="eventLevel != null">
        #{eventLevel,jdbcType=TINYINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="merchant != null">
        #{merchant,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="merchantTel != null">
        #{merchantTel,jdbcType=VARCHAR},
      </if>
      <if test="consumer != null">
        #{consumer,jdbcType=VARCHAR},
      </if>
      <if test="consumerTel != null">
        #{consumerTel,jdbcType=VARCHAR},
      </if>
      <if test="includeWords != null">
        #{includeWords,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="excludeWords != null">
        #{excludeWords,jdbcType=VARCHAR},
      </if>
      <if test="words != null">
        #{words,jdbcType=VARCHAR},
      </if>
      <if test="opinionCount != null">
        #{opinionCount,jdbcType=INTEGER},
      </if>
      <if test="warnCount != null">
        #{warnCount,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update bbd_opinion_event
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.eventName != null">
        event_name = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.eventGroup != null">
        event_group = #{record.eventGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.monitor != null">
        monitor = #{record.monitor,jdbcType=TINYINT},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.eventLevel != null">
        event_level = #{record.eventLevel,jdbcType=TINYINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.merchant != null">
        merchant = #{record.merchant,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantTel != null">
        merchant_tel = #{record.merchantTel,jdbcType=VARCHAR},
      </if>
      <if test="record.consumer != null">
        consumer = #{record.consumer,jdbcType=VARCHAR},
      </if>
      <if test="record.consumerTel != null">
        consumer_tel = #{record.consumerTel,jdbcType=VARCHAR},
      </if>
      <if test="record.includeWords != null">
        include_words = #{record.includeWords,jdbcType=VARCHAR},
      </if>
      <if test="record.keywords != null">
        keywords = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.excludeWords != null">
        exclude_words = #{record.excludeWords,jdbcType=VARCHAR},
      </if>
      <if test="record.words != null">
        words = #{record.words,jdbcType=VARCHAR},
      </if>
      <if test="record.opinionCount != null">
        opinion_count = #{record.opinionCount,jdbcType=INTEGER},
      </if>
      <if test="record.warnCount != null">
        warn_count = #{record.warnCount,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedBy != null">
        modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bbd_opinion_event
    set id = #{record.id,jdbcType=BIGINT},
      event_name = #{record.eventName,jdbcType=VARCHAR},
      event_group = #{record.eventGroup,jdbcType=VARCHAR},
      monitor = #{record.monitor,jdbcType=TINYINT},
      region = #{record.region,jdbcType=VARCHAR},
      event_level = #{record.eventLevel,jdbcType=TINYINT},
      description = #{record.description,jdbcType=VARCHAR},
      merchant = #{record.merchant,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      merchant_tel = #{record.merchantTel,jdbcType=VARCHAR},
      consumer = #{record.consumer,jdbcType=VARCHAR},
      consumer_tel = #{record.consumerTel,jdbcType=VARCHAR},
      include_words = #{record.includeWords,jdbcType=VARCHAR},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      exclude_words = #{record.excludeWords,jdbcType=VARCHAR},
      words = #{record.words,jdbcType=VARCHAR},
      opinion_count = #{record.opinionCount,jdbcType=INTEGER},
      warn_count = #{record.warnCount,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbd.domain.OpinionEvent">
    update bbd_opinion_event
    <set>
      <if test="eventName != null">
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="eventGroup != null">
        event_group = #{eventGroup,jdbcType=VARCHAR},
      </if>
      <if test="monitor != null">
        monitor = #{monitor,jdbcType=TINYINT},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="eventLevel != null">
        event_level = #{eventLevel,jdbcType=TINYINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="merchant != null">
        merchant = #{merchant,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="merchantTel != null">
        merchant_tel = #{merchantTel,jdbcType=VARCHAR},
      </if>
      <if test="consumer != null">
        consumer = #{consumer,jdbcType=VARCHAR},
      </if>
      <if test="consumerTel != null">
        consumer_tel = #{consumerTel,jdbcType=VARCHAR},
      </if>
      <if test="includeWords != null">
        include_words = #{includeWords,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null">
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="excludeWords != null">
        exclude_words = #{excludeWords,jdbcType=VARCHAR},
      </if>
      <if test="words != null">
        words = #{words,jdbcType=VARCHAR},
      </if>
      <if test="opinionCount != null">
        opinion_count = #{opinionCount,jdbcType=INTEGER},
      </if>
      <if test="warnCount != null">
        warn_count = #{warnCount,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        modified_by = #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbd.domain.OpinionEvent">
    update bbd_opinion_event
    set event_name = #{eventName,jdbcType=VARCHAR},
      event_group = #{eventGroup,jdbcType=VARCHAR},
      monitor = #{monitor,jdbcType=TINYINT},
      region = #{region,jdbcType=VARCHAR},
      event_level = #{eventLevel,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR},
      merchant = #{merchant,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      merchant_tel = #{merchantTel,jdbcType=VARCHAR},
      consumer = #{consumer,jdbcType=VARCHAR},
      consumer_tel = #{consumerTel,jdbcType=VARCHAR},
      include_words = #{includeWords,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      exclude_words = #{excludeWords,jdbcType=VARCHAR},
      words = #{words,jdbcType=VARCHAR},
      opinion_count = #{opinionCount,jdbcType=INTEGER},
      warn_count = #{warnCount,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=BIGINT},
     <!--  gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}, -->
      modified_by = #{modifiedBy,jdbcType=BIGINT},
      gmt_modified = NOW()
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithPageBounds" parameterType="com.bbd.domain.OpinionEventExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_opinion_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>